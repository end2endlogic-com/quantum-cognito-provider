quarkus.mongodb.devservices.enabled = false
quarkus.keycloak.devservices.enabled=false

auth.provider=cognito
quarkus.oidc.enabled=true
quarkus.devservices.enabled=false

#AWS Configuration
aws.cognito.user-pool-id=${USER_POOL_ID:ignore}
aws.cognito.client-id=${APPLICATION_CLIENT_ID:ignore}
aws.cognito.region=${AWS_REGION:ignore}
aws.cognito.jwks.url=https://cognito-idp.${aws.cognito.region}.amazonaws.com/${aws.cognito.user-pool-id}/.well-known/jwks.json

quarkus.oidc.auth-server-url=https://cognito-idp.${aws.cognito.region}.amazonaws.com/${aws.cognito.user-pool-id}
quarkus.oidc.client-id=${aws.cognito.clientId}
quarkus.oidc.token.issuer=https://cognito-idp.${aws.cognito.region}.amazonaws.com/${aws.cognito.user-pool-id}
quarkus.oidc.roles.role-claim-path=cognito:groups


#-- JWT Config ignored
# Private signing key  unsure why this is commented out most likely because we are handling this
# in the code already some where?
#smallrye.jwt.sign.key.location=privateKey.pem
mp.jwt.verify.issuer=https://example.com/issuer
mp.jwt.verify.audiences=b2bi-api-client,b2bi-api-client-refresh

# Custom JWT Secret
# JWT configuration
auth.jwt.secret=${JWT_SECRET:I7dCUM8Bq/gAsAZXmCAhSjhKBIDYtD1eMZMpnU7Pu9M=}
auth.jwt.expiration=15
auth.jwt.refresh-expiration=30

# Duration in Seconds do not go below 120 because the dialog timer is 120
com.b2bi.jwt.duration=10000
# 7200 -> 2 hours
%dev.com.b2bi.jwt.duration=7200

#--- < MongoDB > ---
# configure the MongoDB client for a replica set of two nodes
# AWS
#quarkus.mongodb.connection-string = ${MONGODB_CONNECTION_STRING:mongodb+srv://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@${MONGODB_HOST}/${MONGODB_DATABASE}?retryWrites=true&w=majority}
quarkus.mongodb.connection-string=${MONGODB_CONNECTION_STRING:mongodb://localhost:27017/?retryWrites=false}

#Docker Container:
#quarkus.mongodb.connection-string = mongodb://mongodb_container:27017


# mandatory if you don't specify the name of the database using @MongoEntity
quarkus.mongodb.database = ${MONGODB_DEFAULT_SCHEMA:system-quantum-com}

#--- Morphia
quarkus.morphia.database=system-quantum-com
quarkus.morphia.packages=com.e2eq.framework.model.persistent.security,com.e2eq.framework.model.persistent.base,com.e2eq.framework.model.persistent.morphia,com.e2eq.framework.model.persistent.migration.base,com.e2eq.framework.persistent
quarkus.morphia.create-caps=true
quarkus.morphia.create-indexes=true
quarkus.morphia.create-validators=true

#---< Database Migrator > ---
# Controls the database migration change scripts
# will look for a previous version to current
quantum.database.version = 1.0.3
quantum.database.scope = DEV
quantum.database.migration.changeset.package = "com.e2eq.framework.model.persistent.morphia.changesets"
quantum.database.migration.enabled = true

quantum.realmConfig.systemRealm=system-quantum-com
quantum.realmConfig.systemTenantId=system.com
quantum.realmConfig.systemOrgRefName=system.com
quantum.realmConfig.systemAccountNumber=0000000000
quantum.realmConfig.systemUserId=system@system.com

quantum.realmConfig.devRealm=dev-quantum-com
quantum.realmConfig.devTenantId=dev-quantum-com

quantum.realmConfig.testRealm=test-quantum-com
quantum.realmConfig.testUserId=test@system.com
quantum.realmConfig.testTenantId=test-quantum.com
quantum.realmConfig.testOrgRefName=test-system.com
quantum.realmConfig.testAccountNumber=0000000000

quantum.realmConfig.defaultRealm=system-quantum-com
quantum.realmConfig.defaultTenantId=system.com
quantum.realmConfig.defaultOrgRefName=system.com
quantum.realmConfig.defaultUserId=system@system.com
quantum.realmConfig.defaultAccountNumber=0000000000

quantum.anonymousUserId=anonymous@system.com


#---< CORS Configuration > ---
quarkus.http.header.Pragma.value=no-cache
quarkus.http.header.Pragma.methods=GET

quarkus.http.cors=true
quarkus.http.cors.origins=${QUARKUS_HTTP_CORS_ORIGINS:https://2997yoylj9.execute-api.us-east-1.amazonaws.com,http://localhost:3000,http://localhost:8080,http://movista-nextjs-ui.s3-website-us-east-1.amazonaws.com,http://example.com}
quarkus.http.cors.headers=accept,authentication,Authorization,content-type,x-requested-with
quarkus.http.cors.methods=GET, OPTIONS, PUT, POST, DELETE
quarkus.http.cors.access-control-allow-credentials=true


quarkus.index-dependency.semver4j.group-id=org.semver4j
quarkus.index-dependency.semver4j.artifact-id=semver4j
quarkus.index-dependency.smallrye-open-api.group-id=io.smallrye
quarkus.index-dependency.smallrye-open-api.artifact-id=smallrye-open-api

#--- < Logging > ---
quarkus.log.level=INFO
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%l] (%t) %s%e%n
#quarkus.log.handler.console."console-handlers".darken=3
quarkus.log.category."com.e2eq".level=INFO
quarkus.log.category."com.e2eq.framework.model.security.rules".level=INFO
quarkus.log.category."com.e2eq.framework.rest.filters".level=DEBUG

#test.userId=system@system.com
#test.password=P@zzw@rd321

test.password=P@zzw@rd321

quantum.defaultSystemPassword=Test123456
quantum.defaultTestPassword=Test123456
